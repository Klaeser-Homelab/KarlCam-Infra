---
- name: Check if K3s is already installed
  stat:
    path: /usr/local/bin/k3s
  register: k3s_installed

- name: Download K3s installer
  get_url:
    url: https://get.k3s.io
    dest: /tmp/k3s-install.sh
    mode: '0755'
  when: not k3s_installed.stat.exists

- name: Install K3s on control plane nodes
  shell: |
    INSTALL_K3S_VERSION="{{ k3s_version }}" \
    K3S_TOKEN="{{ k3s_token }}" \
    INSTALL_K3S_EXEC="server \
      --cluster-cidr={{ k3s_cluster_cidr }} \
      --service-cidr={{ k3s_service_cidr }} \
      --disable traefik \
      --disable servicelb \
      --disable local-storage \
      --write-kubeconfig-mode=644 \
      --node-label=node.kubernetes.io/instance-type=control-plane \
      --node-label=topology.kubernetes.io/zone={{ site_location }}" \
    sh /tmp/k3s-install.sh
  become: yes
  when: 
    - not k3s_installed.stat.exists
    - k3s_control_node is defined and k3s_control_node

- name: Wait for K3s control plane to be ready
  wait_for:
    port: 6443
    host: "{{ ansible_default_ipv4.address }}"
    delay: 10
    timeout: 300
  when: k3s_control_node is defined and k3s_control_node

- name: Get control plane IP for workers
  set_fact:
    k3s_server_url: "https://{{ hostvars[groups['control_plane'][0]]['ansible_default_ipv4']['address'] }}:6443"
  when: not (k3s_control_node is defined and k3s_control_node)

- name: Install K3s on worker nodes
  shell: |
    INSTALL_K3S_VERSION="{{ k3s_version }}" \
    K3S_URL="{{ k3s_server_url }}" \
    K3S_TOKEN="{{ k3s_token }}" \
    INSTALL_K3S_EXEC="agent \
      --node-label=node.kubernetes.io/instance-type=worker \
      --node-label=topology.kubernetes.io/zone={{ site_location }}" \
    sh /tmp/k3s-install.sh
  become: yes
  when: 
    - not k3s_installed.stat.exists
    - not (k3s_control_node is defined and k3s_control_node)

- name: Start and enable K3s service
  systemd:
    name: k3s
    state: started
    enabled: yes
  become: yes
  when: k3s_control_node is defined and k3s_control_node

- name: Start and enable K3s-agent service  
  systemd:
    name: k3s-agent
    state: started
    enabled: yes
  become: yes
  when: not (k3s_control_node is defined and k3s_control_node)

- name: Create .kube directory
  file:
    path: /home/ubuntu/.kube
    state: directory
    owner: ubuntu
    group: ubuntu
    mode: '0755'
  when: k3s_control_node is defined and k3s_control_node

- name: Copy kubeconfig for ubuntu user
  copy:
    src: /etc/rancher/k3s/k3s.yaml
    dest: /home/ubuntu/.kube/config
    owner: ubuntu
    group: ubuntu
    mode: '0600'
    remote_src: yes
  become: yes
  when: k3s_control_node is defined and k3s_control_node

- name: Fetch kubeconfig to local machine
  fetch:
    src: /etc/rancher/k3s/k3s.yaml
    dest: ./kubeconfig-{{ cluster_name }}
    flat: yes
  when: k3s_control_node is defined and k3s_control_node

- name: Install kubectl
  get_url:
    url: "https://dl.k8s.io/release/v1.29.0/bin/linux/amd64/kubectl"
    dest: /usr/local/bin/kubectl
    mode: '0755'
  become: yes
  when: k3s_control_node is defined and k3s_control_node

- name: Install Helm
  shell: |
    curl https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3 | bash
  become: yes
  when: k3s_control_node is defined and k3s_control_node

- name: Install Python kubernetes library
  pip:
    name: kubernetes
    state: present
  become: yes
  when: k3s_control_node is defined and k3s_control_node